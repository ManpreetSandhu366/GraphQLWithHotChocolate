// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220412162112_RenamedTableCommandToPlatformCli")]
    partial class RenamedTableCommandToPlatformCli
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LicenseKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LicenseKey = "16099fba-eb16-08d7-3105-ca36231990b4",
                            Name = ".Net 5"
                        },
                        new
                        {
                            Id = 2,
                            LicenseKey = "4c21fdc5-0ddd-3b2b-4272-e73b022ba5c2",
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 3,
                            LicenseKey = "8934a2ae-3ace-b6a9-406e-bb28e0cda430",
                            Name = "Windows"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.PlatformCli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommandLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("PlatformClis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandLine = "dotnet build",
                            HowTo = "Build project",
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommandLine = "dotnet run",
                            HowTo = "Run project",
                            PlatformId = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.PlatformCli", b =>
                {
                    b.HasOne("DataAccess.Entities.Platform", "Platform")
                        .WithMany("PlatformClis")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("DataAccess.Entities.Platform", b =>
                {
                    b.Navigation("PlatformClis");
                });
#pragma warning restore 612, 618
        }
    }
}
